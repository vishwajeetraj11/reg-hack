import Head from "next/head";
import Image from "next/image";
import { useStats } from "../shared/queries";
import { BsMic, BsMicMute } from "react-icons/bs";
import { useEffect, useRef, useState } from "react";
import classNames from "classnames";
import SpeechRecognition, {
  useSpeechRecognition,
} from "react-speech-recognition";

export default function Home() {
  const [isRecording, setIsRecording] = useState<boolean>(false);
  const [notes, setNotes] = useState<string[]>([]);
  const [note, setNote] = useState<string>("");
  const toggleRecording = () => {
    setIsRecording((x) => !x);
  };

  const handleSaveNote = () => {
    setNotes([...notes, note]);
    setNote("");
  };
  const {
    transcript,
    listening,
    resetTranscript,
    browserSupportsSpeechRecognition,
  } = useSpeechRecognition();

  // if (!browserSupportsSpeechRecognition) {
  //   return <span>Browser doesn't support speech recognition.</span>;
  // }

  return (
    <div>
      <Head>
        <title>AI Notes</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <div className="">
          <div
            role="button"
            onClick={toggleRecording}
            className={classNames(
              "rounded-full w-[100px] h-[100px] flex items-center justify-center",
              listening ? "bg-rose-600" : "bg-blue-600"
            )}
          >
            {listening ? (
              <BsMicMute
                onClick={SpeechRecognition.stopListening}
                className="text-white"
                size={33}
              />
            ) : (
              <BsMic
                onClick={() => {
                  SpeechRecognition.startListening({ continuous: true });
                }}
                className="text-white"
                size={33}
              />
            )}
          </div>
          <p>{note}</p>
          <div className="box">
            <h2>Notes</h2>
            {notes?.map((n) => (
              <p key={n}>{n}</p>
            ))}
          </div>

          <button onClick={resetTranscript}>Reset</button>
          <p>{transcript}</p>
        </div>
      </main>
    </div>
  );
}
